import { type MapData, CellType, type Cell } from "@/types/game-types"

// Function to generate a grid based on map ID
function generateGrid(mapId: string): Cell[][] {
  // This would normally load from a file in the maps folder
  // For now, we'll generate some sample grids

  let grid: Cell[][] = []

  switch (mapId) {
    case "map1":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    case "map2":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    case "map3":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    // New difficult maps
    case "map4":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    case "map5":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    case "map6":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    case "map7":
      grid = [
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.GOLD },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.GOLD },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.EMPTY },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.EXIT },
          { type: CellType.WALL },
        ],
        [
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
          { type: CellType.WALL },
        ],
      ]
      break
    default:
      // Default empty grid
      grid = Array(10)
        .fill(null)
        .map(() =>
          Array(10)
            .fill(null)
            .map(() => ({ type: CellType.EMPTY })),
        )

      // Add walls around the edges
      for (let i = 0; i < 10; i++) {
        grid[0][i] = { type: CellType.WALL }
        grid[9][i] = { type: CellType.WALL }
        grid[i][0] = { type: CellType.WALL }
        grid[i][9] = { type: CellType.WALL }
      }
  }

  return grid
}

// Function to count gold pieces in a grid
function countGoldInGrid(grid: Cell[][]): number {
  let count = 0
  for (let y = 0; y < grid.length; y++) {
    for (let x = 0; x < grid[y].length; x++) {
      if (grid[y][x].type === CellType.GOLD) {
        count++
      }
    }
  }
  return count
}

// In-memory storage for maps (in a real app, this would be a database)
const maps: MapData[] = [
  {
    id: "map1",
    name: "Beginner's Maze",
    difficulty: "easy",
    timeLimit: 60,
    goldCount: 5,
    grid: generateGrid("map1"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 8, y: 8 },
  },
  {
    id: "map2",
    name: "Twisted Paths",
    difficulty: "medium",
    timeLimit: 90,
    goldCount: 8,
    grid: generateGrid("map2"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 8, y: 8 },
  },
  {
    id: "map3",
    name: "Gold Rush",
    difficulty: "hard",
    timeLimit: 120,
    goldCount: 12,
    grid: generateGrid("map3"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 10, y: 10 },
  },
  // New difficult maps
  {
    id: "map4",
    name: "Labyrinth",
    difficulty: "hard",
    timeLimit: 150,
    goldCount: 15,
    grid: generateGrid("map4"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 12, y: 12 },
  },
  {
    id: "map5",
    name: "Golden Maze",
    difficulty: "hard",
    timeLimit: 180,
    goldCount: 15,
    grid: generateGrid("map5"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 13, y: 13 },
  },
  {
    id: "map6",
    name: "Serpent's Path",
    difficulty: "hard",
    timeLimit: 210,
    goldCount: 10,
    grid: generateGrid("map6"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 13, y: 13 },
  },
  {
    id: "map7",
    name: "Ultimate Challenge",
    difficulty: "hard",
    timeLimit: 240,
    goldCount: 15,
    grid: generateGrid("map7"),
    startPosition: { x: 1, y: 1 },
    exitPosition: { x: 14, y: 14 },
  },
]

// Update gold counts to match actual gold in grids
for (let i = 0; i < maps.length; i++) {
  maps[i].goldCount = countGoldInGrid(maps[i].grid)
}

// Function to get all available maps
export async function getMaps(): Promise<MapData[]> {
  // In a real app, this would load maps from files or a database
  return maps
}

// Function to load a specific map by ID
export async function loadMap(mapId: string): Promise<MapData | null> {
  // In a real app, this would load the map from a file or database
  return maps.find((map) => map.id === mapId) || null
}

// Function to get a map by ID
export async function getMapById(mapId: string): Promise<MapData | null> {
  return maps.find((map) => map.id === mapId) || null
}

// Function to add a new map (for future map editor functionality)
export async function addMap(map: MapData): Promise<void> {
  // In a real app, this would save the map to a file or database
  maps.push(map)
}

